{"version":3,"sources":["serviceWorker.ts","pages/history.tsx","components/header/header.tsx","components/listview/listview.tsx","components/tweet_entry/tweet_entry.tsx","components/comment/comment.tsx","components/user_profile/user_profile.tsx","components/joinuscard/joinuscard.tsx","pages/sign_in.tsx","pages/tweets.tsx","pages/tweet_details.tsx","pages/sign_up.tsx","pages/user_details.tsx","index.tsx"],"names":["Boolean","window","location","hostname","match","createBrowserHistory","searchStyle","position","right","bottonBarStyle","backgroundColor","height","leftBarStyle","float","rightIcon1Style","rightIcon2Style","profileStyle","marginTop","width","imageStyle","marginLeft","iconTwitterStyle","fontSize","color","HeaderInternal","_React$Component","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","arguments","inherits","createClass","key","value","react_default","a","createElement","Navbar","bg","variant","Nav","defaultActiveKey","Link","style","eventKey","as","to","index_esm","_renderSomethingPrivate","Form","inline","FormControl","type","placeholder","className","Button","__token","concat","__user","id","onClick","__userId","es","round","size","src","pic","React","Component","Header","withRouter","props","header_HeaderInternal","messageStyle","Listview","items","length","renderItem","cardStyle","padding","margin","MozBorderRadius","WebkitBorderRadius","borderRadius","MozBoxShadow","boxShadow","mediaStyle","paddingTop","expandButtonStyle","transform","cardHeaderStyle","marginRight","buttonAvatarStyle","border","fontsizeEmail","marginBottom","showCommentsStyle","TweetEntry","makeStyles","theme","createStyles","expand","transition","transitions","create","duration","shortest","expandOpen","_this","call","state","expanded","propsExpanded","setExpanded","_this2","Card","CardHeader","avatar","userPic","_showUserDetails","action","IconButton","aria-label","NavDropdown","alignRight","title","Item","_showTweetDetails","userEmail","subheader","date","CardContent","Typography","component","content","imageUrl","undefined","CardMedia","image","CardActions","disableSpacing","Favorite_default","Share_default","aria-expanded","_handleExpandClick","ExpandMore_default","Collapse","in","timeout","unmountOnExit","comments","setState","__id","history","push","userId","maxWidth","cardContentStyle","cardActionsStyle","Comment","divStyle","barStyle","titleStyle","bioStyle","fontsizeName","fontWeight","UserProfile","userName","_renderBio","_this3","renderBio","userBio","fontFamily","tableStyle","borderCollapse","borderSpacing","trStyle","iconSearchStyle","iconPeopleStyle","iconChatStyle","JoinUsCard","fa_index_esm","md_index_esm","imgStyle","display","buttonStyle","MozUserSelect","WebkitUserSelect","userSelect","cursor","validationErrorsStyle","serverErrorsStyle","credentialSchema","email","joi","required","password","min","max","SignIn","_Component","error","Group","controlId","Label","Control","onKeyUp","e","_updateEmail","target","Text","_updatePassword","_handlerSubmit","_renderValidationErrors","_renderServerErrors","asyncToGenerator","regenerator_default","mark","_callee","userDetails","wrap","_context","prev","next","getToken","sent","token","user","t0","msg","stop","validationResults","details","map","d","message","_callee3","_context3","abrupt","Promise","resolve","reject","_callee2","data","response","json","_context2","fetch","method","headers","Content-Type","body","JSON","stringify","status","leftStyle","midleStyle","rightStyle","ad2Style","Tweets","dataTweets","_dataTweets","getTweetsWithComments","_renderUserProfile","_renderTweetWithComments","_renderRight","listview_Listview","tweet","tweet_entry_TweetEntry","referenceUser","_renderComments","dataComments","comment","comment_Comment","user_profile_UserProfile","name","bio","joinuscard_JoinUsCard","react_router_dom","sign_in_SignIn","TweetDetails","dataTweetComments","_dataTweetComments","getTweetWithComments","_renderTweetsWithComments","_createComments","confirmPassword","label","valid","options","language","any","allowOnly","SignUp","_updateConfirmPassword","createUser","UserDetailsInternal","dataUserDetails","_dataUserDetails","getUserDetailsInternal","_renderUserTweets","tweetsWithComments","UserDetails","user_details_UserDetailsInternal","ReactDOM","render","react_router","Helmet_default","bodyAttributes","exact","path","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.312861af.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { createBrowserHistory } from \"history\";\n\nexport default createBrowserHistory();","import React from 'react';\nimport {Link} from 'react-router-dom';\nimport {withRouter} from \"react-router-dom\";\nimport { FiTwitter } from \"react-icons/fi\";\nimport { GiBirdTwitter } from \"react-icons/gi\";\n// import { withAuth } from \"../with_auth/with_auth\"\n\nimport {Nav, Navbar, Form, FormControl, Button} from 'react-bootstrap';\n\nimport Avatar from 'react-avatar';\n\nimport history from '../../pages/history';\n\n\nconst navlinkStyle: React.CSSProperties = {\n    marginTop: \"7px\"\n};\n\nconst searchStyle: React.CSSProperties = {\n    position: \"absolute\",\n    right: \"38%\"\n};\n\nconst bottonBarStyle: React.CSSProperties = {\n    // backgroundColor: \"#9370DB \",\n    backgroundColor: \"#1da1f2\",\n    height: \"30px\"\n};\n\nconst leftBarStyle: React.CSSProperties = {\n    float: \"left\"\n};\n\nconst rightBarStyle: React.CSSProperties = {\n    position: \"relative\",\n    float: \"right\",\n    right: \"10px\",\n    width: \"50%\"\n};\n\nconst rightIcon1Style: React.CSSProperties = {\n    position: \"absolute\",\n    right: \"15px\"\n};\n\nconst rightIcon2Style: React.CSSProperties = {\n    position: \"absolute\",\n    right: \"85px\"\n};\n\nconst profileStyle: React.CSSProperties = {\n    position: \"absolute\",\n    marginTop: \"10px\",\n    right: \"15px\",\n    width: \"10px\",\n    height: \"10px\" \n};\n\nconst imageStyle: React.CSSProperties = {\n    marginTop: \"-22px\",\n    marginLeft: \"-33px\",\n    width: \"45px\",\n    height: \"45px\" \n};\n\nconst iconTwitterStyle: React.CSSProperties = {\n    fontSize: \"27px\",\n    color: \"white\",\n    float: \"right\",\n    // marginRight: \"7px\",\n    // marginBottom: \"40px\",\n};\n\n\ninterface HeaderInternalProps {\n    // Metodo 2 con la class que Remo creo «with_auth»\n    // token: string | null;\n}\n\ninterface HeaderInternalStates {}\n\n\nexport class HeaderInternal extends React.Component<HeaderInternalProps, HeaderInternalStates> {\n    public render() {\n        return (\n            <div>\n                <div>\n                    <Navbar bg=\"dark\" variant=\"dark\">\n                    {/* <Navbar bg=\"light\" variant=\"light\"> */}\n                        <Nav variant=\"pills\" defaultActiveKey=\"/\">\n                            <div>\n                                <Nav.Link style={leftBarStyle} eventKey=\"1\" as={Link} to=\"/\"> <FiTwitter style={iconTwitterStyle}/> </Nav.Link>\n                            </div>\n                            <div>\n                                {this._renderSomethingPrivate()}\n                            </div>\n                            <div style={searchStyle}>\n                                <Form inline>\n                                    <FormControl type=\"text\" placeholder=\"Search\" className=\"mr-sm-2\" />\n                                    <Button variant=\"outline-info\">Search</Button>\n                                </Form>\n                            </div>\n                        </Nav>\n                    </Navbar>\n                </div>\n                <div style={bottonBarStyle}></div>\n            </div>\n        );\n    }\n    private _renderSomethingPrivate() {\n        // =================\n        // Metodo 1: Taking the token that was saved (See «sign_in.tsx») into the window object\n        const token = (window as any).__token;\n\n        // Metodo 2: Usaondo la class que Remo creo «with_auth»\n        // const token = this.props.token;\n        // =================\n        if (token) {\n            return (\n                <div>\n                    <Nav.Link \n                        style={profileStyle}\n                        eventKey=\"4\" \n                        as={Link} to={`/user_details/${(window as any).__user.id}`}\n                        onClick={() => (window as any).__userId = (window as any).__user.id}\n                        >\n                            <Avatar style={imageStyle}\n                                    round={true}\n                                    size=\"45\"\n                                    src={(window as any).__user.pic}\n                            />\n                            {/* <img style={imageStyle}\n                                src={(window as any).__user.pic}\n                            /> */}\n                    </Nav.Link>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <Nav.Link style={rightIcon1Style} eventKey=\"2\" as={Link} to=\"/sign_in\">Sign In</Nav.Link>\n                    <Nav.Link style={rightIcon2Style} eventKey=\"3\" as={Link} to=\"/sign_up\">Sign Up</Nav.Link>\n                </div>\n            );\n        }\n    }\n\n}\n\n\n// ======================\n// withRouter/withAuth will trigger a re-render:\n// Metodo 1: Using «withRouter»\nexport const Header = withRouter(props => <HeaderInternal {...props}/>);\n\n// Metodo 2: Usando la class que Remo creo «with_auth»\n// export const Header = withAuth(props => <HeaderInternal token={props.authToken} />);\n// ======================\n\n// withRouter pass some props that contain the history to the <HeaderInternal> component\n// and returns a new component named <Header>. The new component (Header) is identical to the <HeaderInternal> \n// Component but it has som extra properties. If one of the properties passed (props) chages, <Header> is going to re-render\n\n// So, basically, withRouter is a function that is taking a component, adding some properties to that component, and returning a new\n// componenet that is going to render every time that some of the properties added chages.\n\n// In the case of «withRouter, the properties that we are adding are relating to the Routing. So, when the routing changes, the \n// component is going to ber re-render\n\n// https://reacttraining.com/react-router/core/api/withRouter\n// You can get access to the history object’s properties and the closest <Route>'s match via the withRouter higher-order\n// component. withRouter will pass updated match, location, and history props to the wrapped component whenever it renders.","import React from 'react';\n\nimport {TweetEntry} from  '../tweet_entry/tweet_entry';\n\n\nconst messageStyle: React.CSSProperties = {\n    fontSize: \"15px\",\n    color: \"#635f5f\"\n};\n\n\ninterface ListviewProps {\n    items: any[];\n    renderItem: JSX.Element[];\n}\n\ninterface ListviewState {}\n\n\nexport class Listview extends React.Component<ListviewProps, ListviewState> {\n    public render(){\n        if (this.props.items.length < 1){\n            return <div><p style={messageStyle}>There are no comments yet</p></div>;\n        } else {\n            return (\n                this.props.renderItem\n            );\n        }\n    }\n}\n\n\n// export class Listview extends React.Component<ListviewProps, ListviewState> {\n//     public render(){\n//         if (this.props.items.length < 1){\n//             return <div><p style={messageStyle}>There are no comments yet</p></div>;\n//         } else {\n//             return (\n//                 this.props.items.map(\n//                     (item) => {\n//                         return (\n//                             this.props.renderItem\n//                         );\n//                     }\n//                 )\n//             );\n//         }\n//     }\n// }","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\n// import Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\n\nimport {Nav, Navbar, Form, FormControl, Button, NavDropdown} from 'react-bootstrap';\n\nimport {TweetDetails} from  '../../pages/tweet_details';\nimport {SignUp} from \"../../pages/sign_up\";\n\nimport Avatar from 'react-avatar';\nimport history from '../../pages/history';\n\nimport {withRouter} from \"react-router-dom\";\n\n\nconst cardStyle: React.CSSProperties = {\n    // maxWidth: \"650px\",\n    padding: \"40px 40px\",\n    backgroundColor: \"white\",\n    // backgroundColor: \"#F7F7F7\",\n\n    margin: \"0 auto 10px\",\n    marginTop: \"5px\",\n    MozBorderRadius: \"2px\",\n    WebkitBorderRadius: \"2px\",\n    borderRadius: \"2px\",\n    MozBoxShadow: \"0px 2px 2px rgba(0, 0, 0, 0.3)\",\n    boxShadow: \"0px 2px 2px rgba(0, 0, 0, 0.3)\"\n};\n\nconst mediaStyle: React.CSSProperties = {\n    height: \"0\",\n    paddingTop: '56.25%', // 16:9\n};\n\nconst avatarStyle: React.CSSProperties = {\n    backgroundColor: \"#9370DB\"\n};\n\nconst expandButtonStyle: React.CSSProperties = {\n    transform: 'rotate(0deg)',\n    marginLeft: 'auto',\n};\n\nconst cardHeaderStyle: React.CSSProperties = {\n    marginRight: \"-13px\",\n};\n\nconst buttonAvatarStyle: React.CSSProperties = {\n    padding: \"0px 0px\",\n    border: \"none\",\n    backgroundColor: \"transparent\"\n};\n\nconst fontsizeEmail: React.CSSProperties = {\n    fontSize: \"17px\",\n    color: \"blue\",\n    marginBottom: \"0px\"\n};\n\nconst showCommentsStyle: React.CSSProperties = {\n    float: \"right\",\n    color: \"grey\",\n    right: \"15px\",\n    marginLeft: \"292px\",\n};\n\n\nconst useStyles = makeStyles( (theme: Theme) =>\n    createStyles({\n        expand: {\n            transform: 'rotate(0deg)',\n            marginLeft: 'auto',\n            transition: theme.transitions.create(\n                'transform',\n                {\n                    duration: theme.transitions.duration.shortest,\n                }\n            ),\n        },\n        expandOpen: {\n            transform: 'rotate(180deg)',\n        },\n    }),\n);\n\n\ninterface TweetEntryProps {\n    id:         number;\n    title?:     string | null;\n    content:    string;\n    date?:      string | null;\n    imageUrl?:  string | null;\n    userEmail?: string | null;\n    userId?:    number | null;\n    userPic?:   string\n    comments?:  any;\n    propsExpanded?: boolean\n}\n\ninterface TweetEntryStates {\n   expanded: boolean | undefined;\n   setExpanded: boolean;\n}\n\n\nexport class TweetEntry extends React.Component<TweetEntryProps, TweetEntryStates> {\n    public constructor(props: TweetEntryProps){\n        super(props)\n        this.state = {\n            expanded: this.props.propsExpanded,\n            // expanded: false,\n            setExpanded: false\n        };\n    }\n    public render(){\n        return (\n            <Card style={cardStyle}>\n                <CardHeader style={cardHeaderStyle}\n                    avatar={\n                        <Button style={buttonAvatarStyle}>\n                            <Avatar\n                                round={true}\n                                size=\"60\"\n                                src={this.props.userPic}\n                                onClick={() => this._showUserDetails()}\n                            />\n                        </Button>\n                        // <Avatar style={avatarStyle} aria-label=\"Recipe\">\n                        //     T\n                        // </Avatar>\n                    }\n                    action={\n                        <IconButton aria-label=\"Settings\">\n                            {/* <MoreVertIcon></MoreVertIcon> */}\n                            <NavDropdown \n                                alignRight\n                                title=\"\"\n                                // title={\n                                //     <div style={{ display: 'inline-block' }}> \n                                //       {/* <MoreVertIcon/> {' '} */}\n                                //     </div>\n                                // }\n                                id=\"basic-nav-dropdown\">\n                                <NavDropdown.Item\n                                    eventKey=\"1\"\n                                    onClick={() => this._showTweetDetails()}\n                                    >\n                                        Show this tweet\n                                </NavDropdown.Item>\n                                {/* <NavDropdown.Divider /> */}\n                                {/* <NavDropdown.Item eventKey=\"2\">Separated link</NavDropdown.Item> */}\n                            </NavDropdown>  \n                        </IconButton>\n                    }\n                    title = {<p style={fontsizeEmail}>{this.props.userEmail}</p>}\n                    subheader={this.props.date}\n                />\n                <CardContent>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {this.props.content}\n                    </Typography>\n                </CardContent>\n                {\n                    (() => {\n                        if (this.props.imageUrl !== null && this.props.imageUrl !== undefined){\n                            return (\n                                <CardMedia\n                                    style={mediaStyle}\n                                    image={this.props.imageUrl}\n                                />\n                            );\n                        } else {\n                            return null;\n                        }\n                    })()\n                }\n                {/* <CardMedia\n                    style={mediaStyle}\n                    // image=\"http://www.araguato.org/sites/default/files/styles/full_width_500px_height/public/www.araguato.org%20Choroni%20Chuao01_1.jpg?itok=JseYr5dg\"\n                    // title=\"Paella dish\"\n                    // {image !== undefined ? image={this.props.imageUrl}}\n                    // image={this.props.imageUrl}\n                /> */}\n                <CardActions disableSpacing>\n                    <IconButton aria-label=\"Add to favorites\">\n                        <FavoriteIcon/>\n                    </IconButton>\n                    <IconButton aria-label=\"Share\">\n                        <ShareIcon/>\n                    </IconButton>\n                    <div style={showCommentsStyle}>\n                        Show comments\n                    </div>\n                    <IconButton\n                        // className={\n                        //     clsx(\n                        //         {useStyles.expand},\n                        //         {\n                        //             [useStyles.expandOpen]: this.state.expanded,\n                        //         }\n                        //     )\n                        // }\n                        style={expandButtonStyle}\n                        title=\"Show comments\"\n                        aria-expanded={this.state.expanded}\n                        aria-label=\"Show more\"\n                        onClick={() => this._handleExpandClick()}\n                        >\n                        <ExpandMoreIcon/>\n                    </IconButton>\n                </CardActions>\n                <Collapse in={this.state.expanded} timeout=\"auto\" unmountOnExit>\n                    <CardContent>\n                        {this.props.comments}\n                    </CardContent>\n                </Collapse>\n            </Card>\n        );\n    }\n    private _defineExpanded(){\n        if (this.props.propsExpanded === undefined) {\n            return false;\n        } else {\n            return this.props.propsExpanded;\n        }\n    }\n\n    private _handleExpandClick() {\n        this.setState({expanded: !this.state.expanded});\n    }\n    private _showTweetDetails() {\n        (window as any).__id = this.props.id;\n        history.push(`/tweet_details/${this.props.id}`);\n        // history.push(`/tweet_details`);\n    }\n    private _showUserDetails() {\n        (window as any).__userId = this.props.userId;\n        history.push(`/user_details/${this.props.userId}`);\n    }\n\n}\n\n\n// export const TweetEntry = withRouter(props => <TweetEntry {...props}/>);","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\n// import Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport {Button} from 'react-bootstrap';\nimport Avatar from 'react-avatar';\n\nimport history from '../../pages/history';\n\n\nconst cardStyle: React.CSSProperties = {\n    maxWidth: \"500px\",\n    padding: \"0px 0px\",\n    backgroundColor: \"white\",\n    margin: \"0 auto 0px\",  // Centra la card\n    boxShadow: \"none\",\n    // borderLeft: \"2px solid #9370DB\",\n    marginTop: \"5px\",\n    // border: \"5px solid red\",\n    // borderLeftColor: \"red\",\n    // borderBlockColor: \"red\",\n    // borderBlockWidth: \"0px\"\n    // marginTop: \"0px\",\n    // MozBorderRadius: \"0px\",\n    // WebkitBorderRadius: \"0px\",\n    // borderRadius: \"0px\",\n};\n\n\nconst cardHeaderStyle: React.CSSProperties = {\n    marginTop: \"5px\",\n    padding: \"0px 0px\",\n    marginLeft: \"5px\",\n};\n\nconst cardContentStyle: React.CSSProperties = {\n    padding: \"0px 0px\",\n    marginLeft: \"66px\",\n    marginTop: \"5px\",\n};\n\nconst cardActionsStyle: React.CSSProperties = {\n    padding: \"0px 0px\",\n    marginLeft: \"52px\",\n    marginTop: \"1px\",\n};\n\nconst buttonAvatarStyle: React.CSSProperties = {\n    padding: \"0px 0px\",\n    border: \"none\",\n    backgroundColor: \"transparent\"\n};\n\n\ninterface CommentProps {\n    id:         number;\n    content:    string;\n    date?:      string | null;\n    userEmail?: string | null;\n    userId?:    number | null;\n    userPic?:   string\n}\n\ninterface CommentStates {\n   expanded: boolean;\n   setExpanded: boolean;\n}\n\n\nexport class Comment extends React.Component<CommentProps, CommentStates> {\n    public constructor(props: CommentProps){\n        super(props)\n        this.state = {\n            expanded: false,\n            setExpanded: false\n        };\n    }\n    public render(){\n        return (\n            <Card style={cardStyle}>\n                <CardHeader\n                    style={cardHeaderStyle}\n                    avatar={\n                        <Button style={buttonAvatarStyle}>\n                            <Avatar\n                                round={true}\n                                size=\"45\"\n                                src={this.props.userPic}\n                                onClick={() => this._showUserDetails()}\n                            />\n                        </Button>\n                        // <Avatar style={avatarStyle} aria-label=\"Recipe\">\n                        //     T\n                        // </Avatar>\n                    }\n                    title={this.props.userEmail}\n                    subheader={this.props.date}\n                />\n                <CardContent style={cardContentStyle}>\n                    <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                        {this.props.content}\n                    </Typography>\n                </CardContent>\n                <CardActions style={cardActionsStyle} disableSpacing>\n                    <IconButton aria-label=\"Add to favorites\">\n                    <FavoriteIcon/>\n                    </IconButton>\n                </CardActions>\n            </Card>\n        );\n    }\n    private _showUserDetails() {\n        (window as any).__userId = this.props.userId;\n        history.push(`/user_details/${this.props.userId}`);\n    }\n\n}","import React from 'react';\nimport { makeStyles, Theme, createStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport Card from '@material-ui/core/Card';\nimport CardHeader from '@material-ui/core/CardHeader';\nimport CardMedia from '@material-ui/core/CardMedia';\nimport CardContent from '@material-ui/core/CardContent';\nimport CardActions from '@material-ui/core/CardActions';\nimport Collapse from '@material-ui/core/Collapse';\n// import Avatar from '@material-ui/core/Avatar';\nimport IconButton from '@material-ui/core/IconButton';\nimport Typography from '@material-ui/core/Typography';\nimport { red } from '@material-ui/core/colors';\nimport FavoriteIcon from '@material-ui/icons/Favorite';\nimport ShareIcon from '@material-ui/icons/Share';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport MoreVertIcon from '@material-ui/icons/MoreVert';\nimport { FiTwitter } from \"react-icons/fi\";\n\nimport {Nav, Navbar, Form, FormControl, Button, NavDropdown} from 'react-bootstrap';\n\nimport {TweetDetails} from  '../../pages/tweet_details';\n\nimport Avatar from 'react-avatar';\nimport history from '../../pages/history';\n\nimport {withRouter} from \"react-router-dom\";\nimport {RouteComponentProps} from \"react-router\";\n\n\nconst cardStyle: React.CSSProperties = {\n    // maxWidth: \"550px\",\n    padding: \"6px 6px\",\n    backgroundColor: \"white\",\n\n    margin: \"0 auto 0px\",\n    marginTop: \"5px\",\n    MozBorderRadius: \"2px\",\n    WebkitBorderRadius: \"2px\",\n    borderRadius: \"2px\",\n    MozBoxShadow: \"0px 2px 2px rgba(0, 0, 0, 0.3)\",\n    boxShadow: \"0px 2px 2px rgba(0, 0, 0, 0.3)\"\n};\n\nconst divStyle: React.CSSProperties = {\n    // maxWidth: \"550px\",\n    padding: \"0px 0px\",\n    backgroundColor: \"#D8BFD8\",\n\n    margin: \"0 auto 0px\",\n    marginTop: \"5px\",\n    MozBorderRadius: \"2px\",\n    WebkitBorderRadius: \"2px\",\n    borderRadius: \"2px\",\n    MozBoxShadow: \"0px 2px 2px rgba(0, 0, 0, 0.3)\",\n    boxShadow: \"0px 2px 2px rgba(0, 0, 0, 0.3)\"\n};\n\nconst barStyle: React.CSSProperties = {\n    backgroundColor: \"#1da1f2\",\n    color: \"#1da1f2\",\n    height: \"40px\",\n};\n\nconst titleStyle: React.CSSProperties = {\n    padding: \"5px 5px\",\n    marginLeft: \"17px\",\n    fontSize: \"20px\",\n};\n\nconst iconTwitterStyle: React.CSSProperties = {\n    fontSize: \"27px\",\n    color: \"white\",\n    float: \"right\",\n    marginRight: \"7px\",\n    // marginBottom: \"40px\",\n};\n\nconst cardHeaderStyle: React.CSSProperties = {\n    marginRight: \"-8px\",\n    marginLeft:  \"-8px\",\n};\n\nconst avatarStyle: React.CSSProperties = {\n    backgroundColor: \"#9370DB\"\n};\n\nconst mediaStyle: React.CSSProperties = {\n    height: \"0\",\n    paddingTop: '56.25%',\n};\n\nconst expandButtonStyle: React.CSSProperties = {\n    transform: 'rotate(0deg)',\n    marginRight: 'auto',\n};\n\nconst bioStyle: React.CSSProperties = {\n    marginTop: \"-20px\"\n};\n\nconst fontsizeName: React.CSSProperties = {\n    fontSize: \"20px\",\n    fontWeight: \"bold\"\n};\n\nconst fontsizeEmail: React.CSSProperties = {\n    fontSize: \"15px\",\n    color: \"blue\",\n    marginTop: \"-15px\"\n};\n\nconst buttonAvatarStyle: React.CSSProperties = {\n    padding: \"0px 0px\",\n    border: \"none\",\n    backgroundColor: \"transparent\"\n};\n\n\nconst useStyles = makeStyles( (theme: Theme) =>\n    createStyles({\n        expand: {\n            transform: 'rotate(0deg)',\n            marginLeft: 'auto',\n            transition: theme.transitions.create(\n                'transform',\n                {\n                    duration: theme.transitions.duration.shortest,\n                }\n            ),\n        },\n        expandOpen: {\n            transform: 'rotate(180deg)',\n        },\n    }),\n);\n\n\ninterface UserProfileProps {\n    userEmail?:  string;\n    userId?:     number  | null;\n    userName?:   string  | null;\n    userBio?:    string  | null;\n    userPic?:    string\n    dateJoined?: string  | null;\n    renderBio?:  boolean | null;\n}\n\ninterface UserProfileStates {\n    expanded: boolean;\n    setExpanded: boolean;\n}\n\n\nexport class UserProfile extends React.Component<UserProfileProps, UserProfileStates> {\n    public constructor(props: UserProfileProps){\n        super(props)\n        this.state = {\n            expanded: true,\n            setExpanded: false\n        };\n    }\n    public render(){\n        return (\n            <div style={divStyle}>\n                <div style={barStyle}>\n                    <p style={titleStyle}>Join us! <FiTwitter style={iconTwitterStyle}/></p>\n                </div >\n                <Card style={cardStyle}>\n                    <CardHeader style={cardHeaderStyle}\n                        avatar={\n                            <Button style={buttonAvatarStyle}>\n                                <Avatar\n                                    round={true}\n                                    size=\"100\"\n                                    src={this.props.userPic}\n                                    onClick={() => this._showUserDetails()}\n                                />\n                            </Button>\n                            // <Avatar style={avatarStyle} aria-label=\"Recipe\">\n                            //     T\n                            // </Avatar>\n                        }\n                        // action={\n                        //     <IconButton aria-label=\"Settings\">\n                        //         <NavDropdown \n                        //             alignRight\n                        //             title=\"\"\n                        //             id=\"basic-nav-dropdown\">\n                        //             <NavDropdown.Item\n                        //                 eventKey=\"1\"\n                        //                 onClick={() => this._showTweetDetails()}\n                        //                 >\n                        //                     Show the user's details\n                        //             </NavDropdown.Item>\n                        //         </NavDropdown>  \n                        //     </IconButton>\n                        // }\n                        title={\n                            <p style={fontsizeName}>{this.props.userName}</p>\n                        }\n                        subheader={\n                            <p style={fontsizeEmail}>{this.props.userEmail}</p>\n                            // subheader={this.props.userEmail}\n                        }\n                        \n                    />\n                    <div>\n                        {this._renderBio()}\n                    </div>\n                </Card>\n            </div>\n        );\n    }\n    private _handleExpandClick() {\n        this.setState({expanded: !this.state.expanded});\n    }\n    private _showUserDetails() {\n        (window as any).__userId = this.props.userId;\n        history.push(`/user_details/${this.props.userId}`);\n    }\n    private _showTweetDetails() {\n        (window as any).__id = this.props.userId;\n        history.push(`/tweet_details/${this.props.userId}`);\n    }\n    private _renderBio() {\n        if (this.props.renderBio !== undefined){\n            return (\n                <div>\n                    <CardActions disableSpacing>\n                        Biography\n                        <IconButton\n                            style={expandButtonStyle}\n                            title=\"Show biography\"\n                            aria-expanded={this.state.expanded}\n                            aria-label=\"Show more\"\n                            onClick={() => this._handleExpandClick()}\n                            >\n                            <ExpandMoreIcon/>\n                        </IconButton>\n                    </CardActions>\n                    <Collapse in={this.state.expanded} timeout=\"auto\" unmountOnExit>\n                        <CardContent style={bioStyle}>\n                            <div>\n                                {this.props.userBio}\n                            </div>\n                        </CardContent>\n                    </Collapse>\n                </div>\n            );\n        }\n    }\n\n}\n\n\n// export const UserProfile = withRouter(props => <UserProfileInternal {...props}/>);","import React from 'react';\n\nimport {TweetEntry} from  '../tweet_entry/tweet_entry';\n\nimport { FaSearch } from 'react-icons/fa';\nimport { MdPeople, MdChatBubbleOutline, MdChat } from 'react-icons/md';\nimport { IoMdPeople, IoIosSearch } from \"react-icons/io\";\nimport { TiSocialTwitter } from \"react-icons/ti\";\nimport { FiTwitter } from \"react-icons/fi\";\nimport { GiBirdTwitter } from \"react-icons/gi\";\n// import { MDBIcon, MDBContainer, MDBBtn } from 'mdbreact';\n\n\nconst cardStyle: React.CSSProperties = {\n    backgroundColor: \"#1da1f2\",\n    // display: \"flex\",\n    fontFamily: \"'Helvetica Neue',Helvetica,Arial,sans-serif\",\n    fontSize: \"18px\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    height: \"492px\",\n    marginTop: \"5px\"\n    // display: \"table-cell\",\n    // verticalAlign: \"middle\"\n};\n\nconst tableStyle: React.CSSProperties = {\n    // borderCollapse: \"collapse\"\n    borderCollapse: \"separate\",\n    borderSpacing: \"0 3em\"\n};\n\nconst trStyle: React.CSSProperties = {\n    marginTop: \"100px\",\n    // paddingTop: \"5em\",\n    // paddingBottom: \"5em\"\n};\n\nconst barStyle: React.CSSProperties = {\n    backgroundColor: \"white\",\n    color: \"#1da1f2\",\n    height: \"40px\",\n};\n\nconst titleStyle: React.CSSProperties = {\n    padding: \"5px 5px\",\n    marginLeft: \"17px\",\n    fontSize: \"20px\",\n};\n\nconst iconTwitterStyle: React.CSSProperties = {\n    fontSize: \"27px\",\n    color: \"#1da1f2\",\n    float: \"right\",\n    marginRight: \"7px\",\n    // marginBottom: \"40px\",\n};\n\nconst iconSearchStyle: React.CSSProperties = {\n    fontSize: \"25px\",\n    marginLeft: \"20px\",\n    marginRight: \"5px\",\n    // marginTop: \"48px\",\n    // marginBottom: \"40px\",\n};\n\nconst iconPeopleStyle: React.CSSProperties = {\n    fontSize: \"35px\",\n    marginLeft: \"20px\",\n    marginRight: \"5px\",\n    // marginTop: \"48px\",\n    // marginBottom: \"40px\",\n};\n\nconst iconChatStyle: React.CSSProperties = {\n    marginLeft: \"20px\",\n    marginRight: \"5px\",\n    fontSize: \"30px\",\n    // marginTop: \"48px\",\n    // marginBottom: \"40px\",\n};\n\nconst textStyle: React.CSSProperties = {\n    display: \"flex\",\n    fontFamily: \"'Helvetica Neue',Helvetica,Arial,sans-serif\",\n    fontSize: \"18px\",\n    color: \"white\",\n    fontWeight: \"bold\",\n    margin: \"48px auto\",\n    marginTop: \"48px\",\n    marginBottom: \"48px\",\n    marginLeft: \"20px\",\n};\n\n\ninterface JoinUsCardProps {}\n\ninterface JoinUsCardState {}\n\n\nexport class JoinUsCard extends React.Component<JoinUsCardProps, JoinUsCardState> {\n    public render(){\n        return (\n            <div style={cardStyle}>\n                <div style={barStyle}>\n                    <p style={titleStyle}>Join us! <FiTwitter style={iconTwitterStyle}/></p>\n                </div >\n                <table style={tableStyle}>\n                    <tr style={trStyle}>\n                        <td style={trStyle}><FaSearch style={iconSearchStyle}/></td>\n                        <td>Follow your interests.</td>\n                    </tr>\n                    <tr>\n                        <td><MdPeople style={iconPeopleStyle}/></td>\n                        <td>Hear what people are talking about.</td>\n                    </tr>\n                    <tr>\n                        <td><MdChatBubbleOutline style={iconChatStyle}/></td>\n                        <td>Join the conversation.</td>\n                    </tr>\n                </table>\n\n            </div>\n        );\n    }\n}\n\n\n{/* <div style={barStyle}>\n</div >\n<div style={textStyle}>\n    <FiTwitter style={iconTwitterStyle}/>\n</div >\n<div style={textStyle}>\n    <FaSearch style={iconSearchStyle}/> Follow your interests. \n</div >\n<div style={textStyle}>\n    <MdPeople style={iconPeopleStyle}/> Hear what people are talking about. \n</div>\n<div style={textStyle}>\n    <MdChatBubbleOutline style={iconChatStyle}/> Join the conversation.\n</div> */}","import React, { Component } from 'react';\nimport {Form, Button} from 'react-bootstrap';\nimport * as joi from \"joi\";\n\n// import * as H from 'history';\nimport history from './history';\n\n\nconst cardStyle: React.CSSProperties = {\n    maxWidth: \"350px\",\n    padding: \"40px 40px\",\n    backgroundColor: \"#F7F7F7\",\n\n    // Para centrar\n    margin: \"0 auto 25px\",\n    marginTop: \"5px\",\n    MozBorderRadius: \"2px\",\n    WebkitBorderRadius: \"2px\",\n    borderRadius: \"2px\",\n    MozBoxShadow: \"0px 2px 2px rgba(0, 0, 0, 0.3)\",\n    boxShadow: \"0px 2px 2px rgba(0, 0, 0, 0.3)\"\n};\n\nconst imgStyle: React.CSSProperties = {\n    width: \"120px\",\n    height: \"120px\",\n    margin: \"0 auto 10px\",\n    display: \"block\",\n    MozBorderRadius: \"50%\",\n    WebkitBorderRadius: \"50%\",\n    borderRadius: \"50%\"\n};\n\nconst buttonStyle: React.CSSProperties = {\n    width: \"100%\",\n    fontSize: \"700\",\n    height: \"36px\",\n    MozUserSelect: \"none\",\n    WebkitUserSelect: \"none\",\n    userSelect: \"none\",\n    cursor: \"default\"\n};\n\nconst validationErrorsStyle: React.CSSProperties = {\n    fontSize: \"13px\",\n    color: \"blue\",\n    paddingTop: \"15px\"\n};\n\nconst serverErrorsStyle: React.CSSProperties = {\n    fontSize: \"13px\",\n    color: \"red\",\n    paddingTop: \"15px\"\n};\n\n\nconst credentialSchema =  {\n    email: joi.string().email().required(),\n    password: joi.string().min(3).max(30).required()\n};\n\ninterface UserDetails{\n    token: string;\n    user: User;\n}\n\ninterface User{\n    id: number;\n    email: string;\n}\n\ninterface SignInProps {}\n\ninterface SignInState {\n    email: string;\n    password: string;\n    error: string | null\n}\n\n\nexport class SignIn extends Component<SignInProps, SignInState> {\n    public constructor(props: SignInProps){\n        super(props)\n        this.state = {\n            email: \"\",\n            password: \"\",\n            error: null\n        };\n    }\n    render() {\n        return (\n            <div style={cardStyle}>\n                <img style={imgStyle} src=\"https://abs.twimg.com/sticky/default_profile_images/default_profile_400x400.png\" />\n                {/* <img style={imgStyle} src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\" /> */}\n                <Form>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control \n                            type=\"email\"\n                            placeholder=\"Enter email\"\n                            onKeyUp={(e: any) => this._updateEmail(e.target.value)}\n                        />\n                        <Form.Text className=\"text-muted\">\n                            {/* Some text */}\n                        </Form.Text>\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            type=\"password\"\n                            placeholder=\"Password\"\n                            onKeyUp={(e: any) => this._updatePassword(e.target.value)}\n                        />\n                    </Form.Group>\n                    <br/>\n                    <Button\n                        style={buttonStyle}\n                        variant=\"primary\"\n                        onClick={() => this._handlerSubmit()}>\n                        Sign In\n                    </Button>\n                    <div style={validationErrorsStyle}> {this._renderValidationErrors()} </div>\n                    <div style={serverErrorsStyle}>     {this._renderServerErrors()}     </div>\n                    {/* {this.state.error} */}\n                    {/* {this.state.token} */}\n                </Form>\n            </div>        \n        );\n    }\n    private _updateEmail(email: string){\n        this.setState({email: email});\n    }\n    private _updatePassword(password: string){\n        this.setState({password: password});\n    }\n    private _handlerSubmit() {\n        (async () => {\n            try {\n                const userDetails: any = await getToken(this.state.email, this.state.password);\n                // Reset error\n                this.setState({ error: null });\n\n                // ===============\n                // Metodo 1: Saving the token in the window object\n                (window as any).__token = userDetails.token;\n                (window as any).__user = userDetails.user;\n\n                // Metodo 2: usando la class que Remo creo «with_auth»\n                // setAuthToken((token as any));\n                // ===============\n\n                // Redirect to home page\n                history.push(\"/\");\n            } catch(err) {\n                this.setState({ error: err.msg });\n            }\n        })();\n    }\n    private _renderValidationErrors(){\n        const validationResults = joi.validate(\n            {\n                email:   this.state.email,\n                password: this.state.password\n            },\n            credentialSchema\n        );\n        if (validationResults.error){\n            return <div> {validationResults.error.details.map( d => <div>{d.message}</div> )} </div>;\n        } else {\n            return <div>OK!</div>;\n        }\n    }\n    private _renderServerErrors() {\n        if (this.state.error === null) {\n            return <div></div>;\n        } else {\n            return <div>{this.state.error}</div>;\n        }\n    }\n}\n\n\n// export const SignIn = withRouter(props => <SignIn {...props}/>);\n\n\nasync function getToken(email: string, password: string) {\n    return new Promise(function (resolve, reject) {\n        (async () => {\n            const data = {\n                email: email,\n                password: password\n            };\n            const response = await fetch(\n                \"/api/v1/auth/login\",\n                {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify(data)\n                }\n            );\n            const json = await response.json();\n            if (response.status === 200) {\n                resolve(json as UserDetails);\n            } else {\n                reject(json as UserDetails);\n            }\n        })();\n    });\n}\n\nasync function getToken1(email: string, password: string){\n    const data = {\n        email: email,\n        password: password\n    }\n    const response = await fetch(\n        \"/api/v1/auth/login\",\n        {\n            method: \"POST\",\n            headers: {\n                'Content-type': 'application/json'\n            },\n            body: JSON.stringify(data)\n        }\n    );\n    const json = await response.json();\n    return json.token;\n}\n\n\n// We can use this method if we want to fetch the token from a local file:\nasync function getToken2(email: string, password: string){\n    const data = {\n        email: email,\n        password: password\n    }\n    const response = await fetch(\n        \"/data/login.json\",\n        {\n            method: \"GET\",\n            headers: {\n                'Content-type': 'application/json'\n            },\n            // body: JSON.stringify(data)\n        }\n    );\n    const json = await response.json();\n    // { token: \"lasflsfooiwerojsdfosjfoijljosdifjosdfijsdfoijoweoierj\" }\n    if (json.token === null){\n        return json.msg;\n    } else {\n        return json.token;\n    }\n}","import React from 'react';\nimport {withRouter} from \"react-router-dom\";\nimport {Link} from \"react-router-dom\";\n\nimport {Listview} from \"../components/listview/listview\";\nimport {TweetEntry} from \"../components/tweet_entry/tweet_entry\";\nimport {Comment} from \"../components/comment/comment\";\nimport {UserProfile} from \"../components/user_profile/user_profile\";\nimport {JoinUsCard} from \"../components/joinuscard/joinuscard\";\nimport {SignIn} from \"./sign_in\";\nimport {SignUp} from \"./sign_up\";\n\n\nconst leftStyle: React.CSSProperties = {\n    padding: \"5px 5px\",\n    float: \"left\",\n    width: \"31%\"\n};\n\nconst midleStyle: React.CSSProperties = {\n    padding: \"5px 5px\",\n    float: \"left\",\n    width: \"47%\"\n};\n\nconst rightStyle: React.CSSProperties = {\n    padding: \"5px 5px\",\n    float: \"left\",\n    width: \"22%\"\n};\n\nconst ad1Style: React.CSSProperties = {\n    // width: \"240px\",\n    // height: \"700px\",\n    margin: \"0 auto 10px\",\n    display: \"block\",\n    // MozBorderRadius: \"50%\",\n    // WebkitBorderRadius: \"50%\",\n    // borderRadius: \"50%\"\n};\n\nconst ad2Style: React.CSSProperties = {\n    // width: \"240px\",\n    // height: \"700px\",\n    padding: \"5px 5px\",\n    margin: \"0 auto 10px\",\n    display: \"block\",\n    // MozBorderRadius: \"50%\",\n    // WebkitBorderRadius: \"50%\",\n    // borderRadius: \"50%\"\n};\n\n\ninterface TweetInterface {\n    id: number;\n    title: string;\n    content: string;\n    date: string;\n    imageUrl: string;\n    referenceUser: {\n        id: number;\n        email: string;\n        password: string;\n        name: string;\n        bio: string;\n        pic: string;\n    };\n}\n\ninterface CommentInterface {\n    id: number;\n    content: string;\n    date: string;\n    referenceUser: {\n        id: number;\n        email: string;\n        password: string;\n        name: string;\n        bio: string;\n        pic: string;\n    };\n    referenceTweet: {\n        id: number;\n        title: string;\n        content: string;\n        date: string;\n    };\n}\n\ninterface TweetWithCommentsInterface {\n    id: number;\n    title: string;\n    content: string;\n    date: string;\n    imageUrl: string;\n    referenceUser: {\n        id: number;\n        email: string;\n        password: string;\n        name: string;\n        bio: string;\n        pic: string;\n    },\n    comments: any;\n}\n\n\ninterface TweetsProps {}\n\ninterface TweetsState {\n    dataTweets: TweetWithCommentsInterface[] | null;\n}\n\n\nexport class Tweets extends React.Component<TweetsProps, TweetsState> {\n    public constructor(props: TweetsProps){\n        super(props);\n        this.state = {\n            dataTweets: null\n        };\n    }\n    public componentDidMount(){\n        (async () => {\n            const _dataTweets = await getTweetsWithComments();\n            this.setState({ dataTweets: _dataTweets });\n        })();\n    }\n    public render(){\n        return (\n            <div>\n                <div style={leftStyle}>\n                    {this._renderUserProfile()}\n                </div>\n                <div style={midleStyle}>\n                    {this._renderTweetWithComments()}\n                </div>\n                <div style={rightStyle}>\n                    {this._renderRight()}\n                </div>\n            </div> \n        );\n    }\n    private _renderTweetWithComments(){\n        if (this.state.dataTweets === null){\n            return <div>Loding...</div>\n        } else {\n            return (\n                <Listview\n                    items={this.state.dataTweets}\n                    renderItem={\n                        this.state.dataTweets.map(\n                            (tweet) => {\n                                return (\n                                    <TweetEntry\n                                        id={tweet.id}\n                                        userId={tweet.referenceUser.id}\n                                        userPic={tweet.referenceUser.pic}\n                                        content={tweet.content}\n                                        date={tweet.date}\n                                        userEmail={tweet.referenceUser.email}\n                                        imageUrl={tweet.imageUrl}\n                                        comments={this._renderComments(tweet.comments)}\n                                    />\n                                );\n                            }\n                        )\n                    }\n                />\n            );\n        }\n    }\n    private _renderComments(dataComments: CommentInterface[]): any{\n        return (\n            <Listview\n                items={dataComments}\n                renderItem={\n                    dataComments.map(\n                        (comment) => {\n                            return (\n                                <Comment\n                                    id={comment.id}\n                                    userId={comment.referenceUser.id}\n                                    userPic={comment.referenceUser.pic}\n                                    content={comment.content}\n                                    date={comment.date}\n                                    userEmail={comment.referenceUser.email}\n                                />\n                            );\n                        }\n                    )\n                }\n            />\n        );\n    }\n    private _renderUserProfile() {\n        const token = (window as any).__token;\n        if (token) {\n            return (\n                <UserProfile\n                    userName = {(window as any).__user.name}\n                    userId = {(window as any).__user.id}\n                    userEmail = {(window as any).__user.email}\n                    userBio = {(window as any).__user.bio}\n                    userPic = {(window as any).__user.pic}\n                />\n            );\n        } else {\n            return <JoinUsCard/>\n        }\n    }\n    private _renderRight() {\n        const token = (window as any).__token;\n        if (!token) {\n            return <SignIn/>\n        } else {\n            return (\n                <div>\n                    <Link to=\"\">\n                        {/* <img style={ad1Style} src=\"https://wiki.postgresql.org/images/f/f5/PostgreSQL.Vertical_Banner.orange.160x600.gif\" /> */}\n                        {/* https://i.pinimg.com/originals/12/8e/2f/128e2f85c84bc8fb45750527d7e367e2.png */}\n                        {/* https://i2.wp.com/theurbandater.com/wp-content/uploads/edd/2015/12/ad-banner.png?fit=500%2C500&ssl=1 */}\n                        <img style={ad2Style} src=\"https://www.psdgraphics.com/file/300x600.jpg\" />\n                    </Link>\n                </div>\n            );\n        }\n    }\n\n}\n\n\nasync function getTweetsWithComments(){\n    const response = await fetch(\"/api/v1/tweets/tweetsWithComments\");\n    const json = await response.json();\n    return json as TweetWithCommentsInterface[];\n}","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nimport {Listview} from \"../components/listview/listview\";\nimport {TweetEntry} from \"../components/tweet_entry/tweet_entry\";\nimport {Comment} from \"../components/comment/comment\";\nimport {UserProfile} from \"../components/user_profile/user_profile\";\nimport {JoinUsCard} from \"../components/joinuscard/joinuscard\";\nimport {SignIn} from \"./sign_in\";\n\nimport {withRouter} from \"react-router-dom\";\n\n\nconst leftStyle: React.CSSProperties = {\n    padding: \"5px 5px\",\n    float: \"left\",\n    width: \"31%\"\n};\n\nconst midleStyle: React.CSSProperties = {\n    padding: \"5px 5px\",\n    float: \"left\",\n    width: \"47%\"\n};\n\nconst rightStyle: React.CSSProperties = {\n    padding: \"5px 5px\",\n    float: \"left\",\n    width: \"22%\"\n};\n\nconst ad1Style: React.CSSProperties = {\n    // width: \"240px\",\n    // height: \"700px\",\n    margin: \"0 auto 10px\",\n    display: \"block\",\n    // MozBorderRadius: \"50%\",\n    // WebkitBorderRadius: \"50%\",\n    // borderRadius: \"50%\"\n};\n\nconst ad2Style: React.CSSProperties = {\n    // width: \"240px\",\n    // height: \"700px\",\n    padding: \"5px 5px\",\n    margin: \"0 auto 10px\",\n    display: \"block\",\n    // MozBorderRadius: \"50%\",\n    // WebkitBorderRadius: \"50%\",\n    // borderRadius: \"50%\"\n};\n\n\ninterface TweetInterface {\n    id: number;\n    title: string;\n    content: string;\n    date: string;\n    imageUrl: string;\n    referenceUser: {\n        id: number;\n        email: string;\n        password: string;\n        name: string;\n        bio: string;\n        pic: string;\n    };\n}\n\ninterface CommentInterface {\n    id: number;\n    content: string;\n    date: string;\n    referenceUser: {\n        id: number;\n        email: string;\n        password: string;\n        name: string;\n        bio: string;\n        pic: string;\n    };\n    referenceTweet: {\n        id: number;\n        title: string;\n        content: string;\n        date: string;\n    };\n}\n\ninterface TweetWithCommentsInterface {\n    id: number;\n    title: string;\n    content: string;\n    date: string;\n    imageUrl: string;\n    referenceUser: {\n        id: number;\n        email: string;\n        password: string;\n        name: string;\n        bio: string;\n        pic: string;\n    },\n    comments: any;\n}\n\n\ninterface TweetDetailsProps {}\n\ninterface TweetDetailsState {\n    dataTweetComments: TweetWithCommentsInterface | null;\n}\n\n\nexport class TweetDetails extends React.Component<TweetDetailsProps, TweetDetailsState> {\n    public constructor(props: TweetDetailsProps){\n        super(props);\n        this.state = {\n            dataTweetComments: null\n        };\n    }\n    public componentDidMount(){\n        (async () => {\n            const _dataTweetComments = await getTweetWithComments();\n            this.setState({ dataTweetComments: _dataTweetComments });\n        })();\n    }\n    public render(){\n        return (\n            <div>\n                <div style={leftStyle}>\n                    {this._renderUserProfile()}\n                </div>\n                <div style={midleStyle}>\n                    {this._renderTweetsWithComments()}\n                </div>\n                <div style={rightStyle}>\n                    {this._renderRight()}\n                </div>\n            </div> \n        );\n    }\n    private _renderTweetsWithComments(){\n        if (this.state.dataTweetComments === null){\n            return <div>Loding...</div>\n        } else {\n            return (\n                <TweetEntry\n                    id={this.state.dataTweetComments.id}\n                    userId={this.state.dataTweetComments.referenceUser.id}\n                    userPic={this.state.dataTweetComments.referenceUser.pic}\n                    content={this.state.dataTweetComments.content}\n                    date={this.state.dataTweetComments.date}\n                    userEmail={this.state.dataTweetComments.referenceUser.email}\n                    imageUrl={this.state.dataTweetComments.imageUrl}\n                    comments={this._createComments(this.state.dataTweetComments.comments)}\n                    propsExpanded={true}\n                />\n            );\n        }\n    }\n    private _createComments(dataComments: CommentInterface[]): any{\n        return (\n            <Listview\n                items={dataComments}\n                renderItem={\n                    dataComments.map(\n                        (comment) => {\n                            return (\n                                <Comment\n                                    id={comment.id}\n                                    userId={comment.referenceUser.id}\n                                    userPic={comment.referenceUser.pic}\n                                    content={comment.content}\n                                    date={comment.date}\n                                    userEmail={comment.referenceUser.email}\n                                />\n                            );\n                        }\n                    )\n                }\n            />\n        );\n    }\n    private _renderUserProfile() {\n        const token = (window as any).__token;\n        if (token) {\n            return (\n                <UserProfile\n                    userName = {(window as any).__user.name}\n                    userId = {(window as any).__user.id}\n                    userEmail = {(window as any).__user.email}\n                    userBio = {(window as any).__user.bio}\n                    userPic = {(window as any).__user.pic}\n                />\n            );\n        } else {\n            return <JoinUsCard/>\n        }\n    }\n    private _renderRight() {\n        const token = (window as any).__token;\n        if (!token) {\n            return <SignIn/>\n        } else {\n            return (\n                <div>\n                    <Link to=\"\">\n                        {/* <img style={ad1Style} src=\"https://wiki.postgresql.org/images/f/f5/PostgreSQL.Vertical_Banner.orange.160x600.gif\" /> */}\n                        <img style={ad2Style} src=\"https://www.psdgraphics.com/file/300x600.jpg\" />\n                    </Link>\n                </div>\n            );\n        }\n    }\n\n}\n\n\nasync function getTweetWithComments(){\n    const id = (window as any).__id;\n    const response = await fetch(`/api/v1/tweets/${id}`);\n    const json = await response.json();\n    return json as TweetWithCommentsInterface;\n}\n\n\n// export const TweetDetails2 = withRouter(props => <TweetDetails id={props.match.params.id}/>);","import React, { Component } from 'react';\nimport {Form, Button} from 'react-bootstrap';\nimport * as joi from \"joi\";\nimport { useAlert } from 'react-alert'\n// import * as H from 'history';\nimport history from './history';\n\n\nconst cardStyle: React.CSSProperties = {\n    maxWidth: \"350px\",\n    padding: \"40px 40px\",\n    backgroundColor: \"#F7F7F7\",\n\n    margin: \"0 auto 25px\",\n    marginTop: \"5px\",\n    MozBorderRadius: \"2px\",\n    WebkitBorderRadius: \"2px\",\n    borderRadius: \"2px\",\n    MozBoxShadow: \"0px 2px 2px rgba(0, 0, 0, 0.3)\",\n    boxShadow: \"0px 2px 2px rgba(0, 0, 0, 0.3)\"\n};\n\nconst imgStyle: React.CSSProperties = {\n    width: \"120px\",\n    height: \"120px\",\n    margin: \"0 auto 10px\",\n    display: \"block\",\n    MozBorderRadius: \"50%\",\n    WebkitBorderRadius: \"50%\",\n    borderRadius: \"50%\"\n};\n\nconst buttonStyle: React.CSSProperties = {\n    width: \"100%\",\n    fontSize: \"700\",\n    height: \"36px\",\n    MozUserSelect: \"none\",\n    WebkitUserSelect: \"none\",\n    userSelect: \"none\",\n    cursor: \"default\"\n};\n\nconst topBar: React.CSSProperties = {\n    height: \"30px\",\n    backgroundColor: \"red\"\n};\n\n\nconst validationErrorsStyle: React.CSSProperties = {\n    fontSize: \"13px\",\n    color: \"blue\",\n    paddingTop: \"15px\"\n};\n\nconst serverErrorsStyle: React.CSSProperties = {\n    fontSize: \"13px\",\n    color: \"red\",\n    paddingTop: \"15px\"\n};\n\n\nconst credentialSchema =  {\n    email: joi.string().email().required(),\n    password: joi.string().min(3).max(30).required(),\n    confirmPassword: joi.string().required().label(\"confirm password\").valid(joi.ref('password')).options({\n        language: {\n          any: {\n            allowOnly: '!!Passwords do not match',\n          }\n        } \n    })\n};\n\ninterface SignUpProps {}\n\ninterface SignUpState {\n    email: string;\n    password: string;\n    confirmPassword: string;\n    error: string | null\n}\n\n\nexport class SignUp extends Component<SignUpProps, SignUpState> {\n    public constructor(props: SignUpProps){\n        super(props)\n        this.state = {\n            email: \"\",\n            password: \"\",\n            confirmPassword: \"\",\n            error: null\n        };\n    }\n    render() {\n        return (\n            <div style={cardStyle}>\n                {/* <div style={topBar}></div> */}\n                <img style={imgStyle} src=\"https://abs.twimg.com/sticky/default_profile_images/default_profile_400x400.png\" />\n                <Form>\n                    <Form.Group controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control \n                            type=\"email\"\n                            placeholder=\"Enter email\"\n                            onKeyUp={(e: any) => this._updateEmail(e.target.value)}\n                        />\n                        <Form.Text className=\"text-muted\">\n                            {/* Some text */}\n                        </Form.Text>\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control\n                            type=\"password\"\n                            placeholder=\"Password\"\n                            onKeyUp={(e: any) => this._updatePassword(e.target.value)}\n                        />\n                    </Form.Group>\n                    <Form.Group controlId=\"formBasicPassword\">\n                        <Form.Label>Confirm password</Form.Label>\n                        <Form.Control\n                            type=\"password\"\n                            placeholder=\"Confirm password\"\n                            onKeyUp={(e: any) => this._updateConfirmPassword(e.target.value)}\n                        />\n                    </Form.Group>\n                    <br/>\n                    <Button\n                        style={buttonStyle}\n                        variant=\"success\"\n                        onClick={() => this._handlerSubmit()}>\n                        Sign Up\n                    </Button>\n                    <div style={validationErrorsStyle}> {this._renderValidationErrors()} </div>\n                    <div style={serverErrorsStyle}>     {this._renderServerErrors()}     </div>\n                </Form>\n            </div>\n        );\n    }\n    private _updateEmail(email: string){\n        this.setState({email: email});\n    }\n    private _updatePassword(password: string){\n        this.setState({password: password});\n    }\n    private _updateConfirmPassword(confirmPassword: string){\n        this.setState({confirmPassword: confirmPassword});\n    }\n    private _handlerSubmit() {\n        (async () => {\n            try {\n                const signup = await createUser(this.state.email, this.state.password);\n                this.setState({ error: null });\n                // const alert = useAlert()\n                // alert.show('Oh look, an alert!')\n                history.push(\"/sign_in\");\n            } catch(err) {\n                this.setState({ error: err.msg });\n            }\n        })();\n    }\n    // private _handlerSubmit() {\n    //     (async () => {\n    //         await createUser(this.state.email, this.state.password);\n    //     })();\n    //     (async () => {\n    //         try {\n    //             const token = await getToken(this.state.email, this.state.password);\n\n    //             // Reset error\n    //             this.setState({ error: null });\n\n    //             // ===============\n    //             // Metodo 1: Saving the token in the window object\n    //             (window as any).__token = token;\n\n    //             // Redirect to home page\n    //             history.push(\"/\");\n    //         } catch(err) {\n    //             this.setState({ error: err.msg });\n    //         }\n    //     })();\n    // }\n    private _renderValidationErrors(){\n        const validationResults = joi.validate(\n            {\n                email:   this.state.email,\n                password: this.state.password,\n                confirmPassword: this.state.confirmPassword\n            },\n            credentialSchema\n        );\n        if (validationResults.error){\n            return <div> {validationResults.error.details.map( d => <div>{d.message}</div> )} </div>;\n        } else {\n            return <div>OK!</div>;\n        }\n    }\n    private _renderServerErrors() {\n        if (this.state.error === null) {\n            return <div></div>;\n        } else {\n            return <div>{this.state.error}</div>;\n        }\n    }\n}\n\n\nasync function  createUser(email: string, password: string) {\n    return new Promise(function (resolve, reject) {\n        (async () => {\n            const data = {\n                email: email,\n                password: password\n            };\n            const response = await fetch(\n                \"/api/v1/users\",\n                {\n                    method: \"POST\",\n                    headers: {\n                        \"Content-Type\": \"application/json\"\n                    },\n                    body: JSON.stringify(data)\n                }\n            );\n            const json = await response.json();\n            if (response.status === 200) {\n                resolve(json);\n            } else {\n                reject(json);\n            }\n        })();\n    });\n}","import React from 'react';\nimport {Link} from \"react-router-dom\";\n\nimport {Listview} from \"../components/listview/listview\";\nimport {TweetEntry} from \"../components/tweet_entry/tweet_entry\";\nimport {Comment} from \"../components/comment/comment\";\nimport {UserProfile} from \"../components/user_profile/user_profile\";\nimport {SignIn} from \"./sign_in\";\n\nimport {withRouter} from \"react-router-dom\";\n\n\nconst leftStyle: React.CSSProperties = {\n    padding: \"5px 5px\",\n    float: \"left\",\n    width: \"31%\"\n};\n\nconst midleStyle: React.CSSProperties = {\n    padding: \"5px 5px\",\n    float: \"left\",\n    width: \"47%\"\n};\n\nconst rightStyle: React.CSSProperties = {\n    padding: \"5px 5px\",\n    float: \"left\",\n    width: \"22%\"\n};\n\nconst ad1Style: React.CSSProperties = {\n    // width: \"240px\",\n    // height: \"700px\",\n    margin: \"0 auto 10px\",\n    display: \"block\",\n    // MozBorderRadius: \"50%\",\n    // WebkitBorderRadius: \"50%\",\n    // borderRadius: \"50%\"\n};\n\nconst ad2Style: React.CSSProperties = {\n    // width: \"240px\",\n    // height: \"700px\",\n    padding: \"5px 5px\",\n    margin: \"0 auto 10px\",\n    display: \"block\",\n    // MozBorderRadius: \"50%\",\n    // WebkitBorderRadius: \"50%\",\n    // borderRadius: \"50%\"\n};\n\n\ninterface UserDetailsInternalInterface {\n    id: number;\n    email: string;\n    name: string;\n    bio: string;\n    pic: string;\n    tweetsWithComments: TweetWithCommentInterface[];\n}\n\ninterface TweetWithCommentInterface {\n    id: number;\n    title: string;\n    content: string;\n    date: string;\n    imageUrl: string;\n    referenceUser: {\n        id: number;\n        email: string;\n        password: string;\n        name: string;\n        bio: string;\n        pic: string;\n    };\n    comments: CommentInterface[];\n}\n\ninterface CommentInterface {\n    id: number;\n    content: string;\n    date: string;\n    referenceUser: {\n        id: number;\n        email: string;\n        password: string;\n        name: string;\n        bio: string;\n        pic: string;\n    };\n    referenceTweet: {\n        id: number;\n        title: string;\n        content: string;\n        date: string;\n    };\n}\n\n\ninterface UserDetailsInternalProps {}\n\ninterface UserDetailsInternalState {\n    dataUserDetails: UserDetailsInternalInterface | null;\n}\n\n\nexport class UserDetailsInternal extends React.Component<UserDetailsInternalProps, UserDetailsInternalState> {\n    public constructor(props: UserDetailsInternalProps){\n        super(props);\n        this.state = {\n            dataUserDetails: null\n        };\n    }\n    public componentDidMount(){\n        (async () => {\n            const _dataUserDetails = await getUserDetailsInternal();\n            this.setState({ dataUserDetails: _dataUserDetails });\n        })();\n    }\n    public render(){\n        return (\n            <div>\n                <div style={leftStyle}>\n                {this._renderUserProfile()}\n                </div>\n                <div style={midleStyle}>\n                    {this._renderUserTweets()}\n                </div>\n                <div style={rightStyle}>\n                    {this._renderRight()}\n                </div>\n            </div> \n        );\n    }\n    private _renderUserTweets(){\n        if (this.state.dataUserDetails === null){\n            return <div>Loding...</div>\n        } else {\n            return (\n                <Listview\n                    items={this.state.dataUserDetails.tweetsWithComments}\n                    renderItem={\n                        this.state.dataUserDetails.tweetsWithComments.map(\n                            (tweet) => {\n                                return (\n                                    <TweetEntry\n                                        id={tweet.id}\n                                        userId={tweet.referenceUser.id}\n                                        userPic={tweet.referenceUser.pic}\n                                        content={tweet.content}\n                                        date={tweet.date}\n                                        userEmail={tweet.referenceUser.email}\n                                        imageUrl={tweet.imageUrl}\n                                        comments={this._createComments(tweet.comments)}\n                                    />\n                                );\n                            }\n                        )\n                    }\n                />\n            );\n        }\n    }\n    private _createComments(dataComments: CommentInterface[]): any{\n        return (\n            <Listview\n                items={dataComments}\n                renderItem={\n                    dataComments.map(\n                        (comment) => {\n                            return (\n                                <Comment\n                                    id={comment.id}\n                                    userId={comment.referenceUser.id}\n                                    userPic={comment.referenceUser.pic}\n                                    content={comment.content}\n                                    date={comment.date}\n                                    userEmail={comment.referenceUser.email}\n                                />\n                            );\n                        }\n                    )\n                }\n            />\n        );\n    }\n    private _renderUserProfile(){\n        if (this.state.dataUserDetails === null){\n            return <UserProfile/>\n        } else {\n            return (\n                <UserProfile\n                    userName  = {this.state.dataUserDetails.name}\n                    userId    = {this.state.dataUserDetails.id}\n                    userEmail = {this.state.dataUserDetails.email}\n                    userBio   = {this.state.dataUserDetails.bio}\n                    userPic   = {this.state.dataUserDetails.pic}\n                    renderBio = {true}\n                />\n            );\n        }\n    }\n    private _renderRight() {\n        const token = (window as any).__token;\n        if (!token) {\n            return <SignIn/>\n        } else {\n            return (\n                <div>\n                    <Link to=\"\">\n                        {/* <img style={ad1Style} src=\"https://wiki.postgresql.org/images/f/f5/PostgreSQL.Vertical_Banner.orange.160x600.gif\" /> */}\n                        <img style={ad2Style} src=\"https://www.psdgraphics.com/file/300x600.jpg\" />\n                    </Link>\n                </div>\n            );\n        }\n    }\n\n}\n\n\nasync function getUserDetailsInternal(){\n    const userId = (window as any).__userId;\n    const response = await fetch(`/api/v1/users/${userId}`);\n    const json = await response.json();\n    return json as UserDetailsInternalInterface;\n}\n\n\nexport const UserDetails = withRouter(props => <UserDetailsInternal {...props}/>);","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport * as serviceWorker from './serviceWorker';\n\nimport {BrowserRouter, Switch, Route, Router} from 'react-router-dom';\nimport {Card, Button} from 'react-bootstrap';\nimport history from './pages/history';\nimport Helmet from 'react-helmet';\n\nimport 'bootstrap/dist/css/bootstrap.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\n\nimport {Header}         from  './components/header/header';\nimport {Tweets}         from  './pages/tweets';\nimport {TweetDetails}   from  './pages/tweet_details';\nimport {SignIn}         from  './pages/sign_in';\nimport {SignUp}         from  './pages/sign_up';\nimport {UserDetails}    from  './pages/user_details';\n\n\nReactDOM.render(\n    // <BrowserRouter>\n    <Router history={history}>\n        <div>\n            <Helmet bodyAttributes={{style: 'background-color : #dfe0e6'}}/>\n            <Header/>\n            <Switch>\n                <Route exact path=\"/\"                     component={Tweets}/>\n                <Route exact path=\"/tweet_details/:id\"    component={TweetDetails}/>\n                <Route exact path=\"/sign_in\"              component={SignIn}/>\n                <Route exact path=\"/sign_up\"              component={SignUp}/>\n                <Route exact path=\"/user_details/:userId\" component={UserDetails}/>\n            </Switch>\n        </div>\n    </Router>,\n    // </BrowserRouter>,\n    document.getElementById('root')\n);\n\n\nserviceWorker.unregister();"],"sourceRoot":""}